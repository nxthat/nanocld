{
  "openapi": "3.0.3",
  "info": {
    "title": "nanocld",
    "description": "",
    "contact": {
      "name": "",
      "email": ""
    },
    "license": {
      "name": ""
    },
    "version": "0.1.3"
  },
  "paths": {
    "/cargoes": {
      "get": {
        "tags": [
          "cargo"
        ],
        "summary": "List cargo",
        "description": "List cargo\n",
        "operationId": "list_cargo",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cargo are stored",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of cargo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CargoItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Namespace name not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "cargo"
        ],
        "summary": "Create new cargo",
        "description": "Create new cargo\n",
        "operationId": "create_cargo",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cargo will be stored",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CargoPartial"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "New cargo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CargoItem"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Namespace name not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/cargoes/count": {
      "get": {
        "tags": [
          "cargo"
        ],
        "summary": "Count cargo",
        "description": "Count cargo\n",
        "operationId": "count_cargo",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cargo is stored",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generic delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericCount"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Namespace name not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/cargoes/{name}": {
      "delete": {
        "tags": [
          "cargo"
        ],
        "summary": "Delete cargo by it's name",
        "description": "Delete cargo by it's name\n",
        "operationId": "delete_cargo_by_name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the cargo",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cargo is stored",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generic delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericDelete"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Namespace name not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters": {
      "get": {
        "tags": [
          "cluster"
        ],
        "summary": "List all cluster",
        "description": "List all cluster\n",
        "operationId": "list_cluster",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace to add cluster in if empty we use 'default' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of cluster for given namespace",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterItem"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error"
          },
          "404": {
            "description": "Namespace name not valid"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "cluster"
        ],
        "summary": "Create new cluster",
        "description": "Create new cluster\n",
        "operationId": "create_cluster",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace to add cluster in if empty we use 'default' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterPartial"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Fresh created cluster",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterItem"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error"
          },
          "404": {
            "description": "Namespace name not valid"
          }
        },
        "deprecated": false
      }
    },
    "/clusters/count": {
      "get": {
        "tags": [
          "cluster"
        ],
        "summary": "Count cluster",
        "description": "Count cluster\n",
        "operationId": "count_cluster",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cargo is stored",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generic delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericCount"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Namespace name not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters/{c_name}/networks": {
      "get": {
        "tags": [
          "cluster_network"
        ],
        "summary": "List network for given cluster",
        "description": "List network for given cluster\n",
        "operationId": "list_cluster_network",
        "parameters": [
          {
            "name": "c_name",
            "in": "path",
            "description": "name of the cluster",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cluster is if empty we use 'default' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "List of networks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterNetworkItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Namespace name not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "cluster_network"
        ],
        "summary": "Create a network for given cluster",
        "description": "Create a network for given cluster\n",
        "operationId": "create_cluster_network",
        "parameters": [
          {
            "name": "c_name",
            "in": "path",
            "description": "name of the cluster",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cluster is if empty we use 'default' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterNetworkPartial"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "List of networks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterNetworkItem"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Namespace name not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters/{c_name}/networks/{n_name}": {
      "delete": {
        "tags": [
          "cluster_network"
        ],
        "summary": "Delete network by it's name for given cluster in given namespace",
        "description": "Delete network by it's name for given cluster in given namespace\n",
        "operationId": "delete_cluster_network_by_name",
        "parameters": [
          {
            "name": "c_name",
            "in": "path",
            "description": "name of the cluster",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "n_name",
            "in": "path",
            "description": "name of the network",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cluster is if empty we use 'default' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pg delete response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericDelete"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Cluster network not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters/{c_name}/networks/{n_name}/inspect": {
      "get": {
        "tags": [
          "cluster_network"
        ],
        "summary": "Inspect network by it's name for given cluster in given namespace",
        "description": "Inspect network by it's name for given cluster in given namespace\n",
        "operationId": "inspect_cluster_network_by_name",
        "parameters": [
          {
            "name": "c_name",
            "in": "path",
            "description": "name of the cluster",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "n_name",
            "in": "path",
            "description": "name of the network",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cluster is if empty we use 'default' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Network item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterNetworkItem"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Namespace name not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters/{c_name}/variables": {
      "get": {
        "tags": [
          "cluster_variable"
        ],
        "summary": "List variable of a cluster",
        "description": "List variable of a cluster\n",
        "operationId": "list_cluster_variable",
        "parameters": [
          {
            "name": "c_name",
            "in": "path",
            "description": "name of the cluster",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cluster is stored is empty we use 'global' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of variable for given cluster",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterVariableItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Cluster name or Namespace not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "cluster_variable"
        ],
        "summary": "Create cluster variable",
        "description": "Create cluster variable\n",
        "operationId": "create_cluster_variable",
        "parameters": [
          {
            "name": "c_name",
            "in": "path",
            "description": "name of the cluster",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cluster is stored is empty we use 'global' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterVariablePartial"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Fresh cluster variable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterVariableItem"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Cluster name or Namespace not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters/{c_name}/variables/{v_name}": {
      "delete": {
        "tags": [
          "cluster_variable"
        ],
        "summary": "Delete cluster variable by it's name",
        "description": "Delete cluster variable by it's name\n",
        "operationId": "delete_cluster_variable",
        "parameters": [
          {
            "name": "c_name",
            "in": "path",
            "description": "name of the cluster",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "v_name",
            "in": "path",
            "description": "name of the variable",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cluster is stored is empty we use 'global' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generic delete response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericDelete"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Cluster name or Namespace not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters/{name}": {
      "delete": {
        "tags": [
          "cluster"
        ],
        "summary": "Delete cluster by it's name",
        "description": "Delete cluster by it's name\n",
        "operationId": "delete_cluster_by_name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace to add cluster in if empty we use 'default' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Fresh created cluster",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterItem"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Namespace name not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters/{name}/inspect": {
      "get": {
        "tags": [
          "cluster"
        ],
        "summary": "Inspect cluster by it's name",
        "description": "Inspect cluster by it's name\n",
        "operationId": "inspect_cluster_by_name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace to add cluster in if empty we use 'default' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cluster information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterItemWithRelation"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "id name or namespace name not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters/{name}/join": {
      "post": {
        "tags": [
          "cluster"
        ],
        "summary": "join cargo inside a cluster",
        "description": "join cargo inside a cluster\n",
        "operationId": "join_cargo_to_cluster",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace to add cluster in if empty we use 'global' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterJoinBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cargo joinned successfully"
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Cluster name of namespace invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters/{name}/start": {
      "post": {
        "tags": [
          "cluster"
        ],
        "summary": "Start all cargo inside cluster",
        "description": "Start all cargo inside cluster\n",
        "operationId": "start_cluster_by_name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace to add cluster in if empty we use 'global' as value",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cargos have been started"
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Cluster name of namespace invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/git_repositories": {
      "get": {
        "tags": [
          "git_repository"
        ],
        "summary": "List all git repository",
        "description": "List all git repository\n",
        "operationId": "list_git_repository",
        "responses": {
          "200": {
            "description": "Array of git_repository",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GitRepositoryItem"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "git_repository"
        ],
        "summary": "Create new git repository",
        "description": "Create new git repository\n",
        "operationId": "create_git_repository",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GitRepositoryPartial"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Fresh created git_repository",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GitRepositoryItem"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error"
          },
          "404": {
            "description": "Namespace name not valid"
          },
          "422": {
            "description": "The provided payload is not valid"
          }
        },
        "deprecated": false
      }
    },
    "/git_repositories/{name}": {
      "delete": {
        "tags": [
          "git_repository"
        ],
        "summary": "Delete git repository by it's name",
        "description": "Delete git repository by it's name\n",
        "operationId": "delete_git_repository_by_name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of git repository",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Number of entry deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericDelete"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error"
          },
          "404": {
            "description": "Namespace name not valid"
          }
        },
        "deprecated": false
      }
    },
    "/git_repositories/{name}/build": {
      "post": {
        "tags": [
          "git_repository"
        ],
        "summary": "Transform a git repository into an image",
        "description": "Transform a git repository into an image\n",
        "operationId": "build_git_repository_by_name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of git repository",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "description": "Branch to build default to main branch",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Number of entry deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericDelete"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error"
          },
          "404": {
            "description": "Namespace name not valid"
          }
        },
        "deprecated": false
      }
    },
    "/namespaces": {
      "get": {
        "tags": [
          "namespace"
        ],
        "summary": "List all namespace",
        "description": "List all namespace\n",
        "operationId": "list_namespace",
        "responses": {
          "200": {
            "description": "Array of namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NamespaceItem"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "namespace"
        ],
        "summary": "Create new namespace",
        "description": "Create new namespace\n",
        "operationId": "create_namespace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NamespacePartial"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "fresh created namespace",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceItem"
                }
              }
            }
          },
          "400": {
            "description": "generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "422": {
            "description": "the provided payload is not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/namespaces/{name}": {
      "delete": {
        "tags": [
          "namespace"
        ],
        "summary": "Delete namespace by it's name",
        "description": "Delete namespace by it's name\n",
        "operationId": "delete_namespace_by_name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name of the namespace",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "database generic delete response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericDelete"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/namespaces/{name}/inspect": {
      "get": {
        "tags": [
          "namespace"
        ],
        "summary": "Inspect namespace by it's name",
        "description": "Inspect namespace by it's name\n",
        "operationId": "inspect_namespace_by_name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name of the namespace",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceItem"
                }
              }
            }
          },
          "404": {
            "description": "Namespace not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/networks/count": {
      "get": {
        "tags": [
          "cluster_network"
        ],
        "summary": "Count cluster",
        "description": "Count cluster\n",
        "operationId": "count_cluster_network_by_namespace",
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "description": "Name of the namespace where the cargo is stored",
            "required": false,
            "deprecated": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generic delete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericCount"
                }
              }
            }
          },
          "400": {
            "description": "Generic database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Namespace name not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/nginx_templates": {
      "get": {
        "tags": [
          "nginx_template"
        ],
        "summary": "List all nginx template",
        "description": "List all nginx template\n",
        "operationId": "list_nginx_template",
        "responses": {
          "200": {
            "description": "Array of nginx templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NginxTemplateItem"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "description": "Api Error Structure that server send to client",
        "required": [
          "msg"
        ],
        "properties": {
          "msg": {
            "type": "string"
          }
        }
      },
      "CargoItem": {
        "type": "object",
        "description": "Cargo item is an definition to container create image and start them",
        "required": [
          "key",
          "namespace_name",
          "name",
          "image_name",
          "binds",
          "replicas"
        ],
        "properties": {
          "binds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dns_entry": {
            "type": "string"
          },
          "domainname": {
            "type": "string"
          },
          "hostname": {
            "type": "string"
          },
          "image_name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace_name": {
            "type": "string"
          },
          "replicas": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CargoPartial": {
        "type": "object",
        "description": "Cargo partial",
        "required": [
          "name",
          "image_name"
        ],
        "properties": {
          "binds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dns_entry": {
            "type": "string"
          },
          "domainname": {
            "type": "string"
          },
          "environnements": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hostname": {
            "type": "string"
          },
          "image_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "replicas": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ClusterItem": {
        "type": "object",
        "description": "Cluster used to encapsulate networks",
        "required": [
          "key",
          "name",
          "namespace",
          "proxy_templates"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "proxy_templates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ClusterItemWithRelation": {
        "type": "object",
        "description": "Cluster item with his relations",
        "required": [
          "key",
          "name",
          "namespace",
          "proxy_templates",
          "variables"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "networks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterNetworkItem"
            }
          },
          "proxy_templates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterVariableItem"
            }
          }
        }
      },
      "ClusterJoinBody": {
        "type": "object",
        "required": [
          "cargo",
          "network"
        ],
        "properties": {
          "cargo": {
            "type": "string"
          },
          "network": {
            "type": "string"
          }
        }
      },
      "ClusterNetworkItem": {
        "type": "object",
        "description": "Cluster network item",
        "required": [
          "key",
          "name",
          "namespace",
          "docker_network_id",
          "default_gateway",
          "cluster_key"
        ],
        "properties": {
          "cluster_key": {
            "type": "string"
          },
          "default_gateway": {
            "type": "string"
          },
          "docker_network_id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          }
        }
      },
      "ClusterNetworkPartial": {
        "type": "object",
        "description": "Cluster network partial",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ClusterPartial": {
        "type": "object",
        "description": "Partial cluster",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "proxy_templates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ClusterVariableItem": {
        "type": "object",
        "required": [
          "key",
          "cluster_key",
          "name",
          "value"
        ],
        "properties": {
          "cluster_key": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ClusterVariablePartial": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "GenericCount": {
        "type": "object",
        "required": [
          "count"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GenericDelete": {
        "type": "object",
        "description": "Generic postgresql delete response",
        "required": [
          "count"
        ],
        "properties": {
          "count": {
            "type": "integer"
          }
        }
      },
      "GitRepositoryItem": {
        "type": "object",
        "description": "Git repository are used to have project definition to deploy cargo",
        "required": [
          "name",
          "url",
          "default_branch",
          "source"
        ],
        "properties": {
          "default_branch": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/GitRepositorySourceType"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "GitRepositoryPartial": {
        "type": "object",
        "description": "Partial Git repository",
        "required": [
          "url",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "GitRepositorySourceType": {
        "type": "string",
        "description": "Git repository source types",
        "enum": [
          "github",
          "gitlab",
          "local"
        ]
      },
      "NamespaceItem": {
        "type": "object",
        "description": "Namespace to encapsulate clusters",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "NamespacePartial": {
        "type": "object",
        "description": "Partial namespace",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "NginxTemplateItem": {
        "type": "object",
        "required": [
          "name",
          "mode",
          "content"
        ],
        "properties": {
          "content": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/NginxTemplateModes"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "NginxTemplateModes": {
        "type": "string",
        "description": "Nginx template mode",
        "enum": [
          "http",
          "stream"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ]
}
